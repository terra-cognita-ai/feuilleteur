// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options, formDataBodySerializer } from '@hey-api/client-fetch';
import type { PostUploadFileData, PostUploadFileError, PostUploadFileResponse, PostImportBookData, PostImportBookError, PostImportBookResponse, PostAskQuestionData, PostAskQuestionError, PostAskQuestionResponse, GetChromaData, GetChromaError, GetChromaResponse, DeleteClearDbError, DeleteClearDbResponse, GetBooksError, GetBooksResponse, GetStatusError, GetStatusResponse } from './types.gen';

export const client = createClient(createConfig());

export class BackendService {
    /**
     * Upload File
     */
    public static uploadFile<ThrowOnError extends boolean = false>(options: Options<PostUploadFileData, ThrowOnError>) {
        return (options?.client ?? client).post<PostUploadFileResponse, PostUploadFileError, ThrowOnError>({
            ...options,
            ...formDataBodySerializer,
            headers: {
                'Content-Type': null,
                ...options?.headers
            },
            url: '/upload-file'
        });
    }
    
    /**
     * Import Book
     */
    public static importBook<ThrowOnError extends boolean = false>(options: Options<PostImportBookData, ThrowOnError>) {
        return (options?.client ?? client).post<PostImportBookResponse, PostImportBookError, ThrowOnError>({
            ...options,
            url: '/import-book'
        });
    }
    
    /**
     * Ask Question
     */
    public static askQuestion<ThrowOnError extends boolean = false>(options: Options<PostAskQuestionData, ThrowOnError>) {
        return (options?.client ?? client).post<PostAskQuestionResponse, PostAskQuestionError, ThrowOnError>({
            ...options,
            url: '/ask-question'
        });
    }
    
    /**
     * Get Db
     */
    public static getDb<ThrowOnError extends boolean = false>(options: Options<GetChromaData, ThrowOnError>) {
        return (options?.client ?? client).get<GetChromaResponse, GetChromaError, ThrowOnError>({
            ...options,
            url: '/chroma'
        });
    }
    
    /**
     * Clear Db
     */
    public static clearDb<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).delete<DeleteClearDbResponse, DeleteClearDbError, ThrowOnError>({
            ...options,
            url: '/clear_db'
        });
    }
    
    /**
     * Get Books
     */
    public static getBooks<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetBooksResponse, GetBooksError, ThrowOnError>({
            ...options,
            url: '/books'
        });
    }
    
    /**
     * Get Status
     */
    public static getStatus<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetStatusResponse, GetStatusError, ThrowOnError>({
            ...options,
            url: '/status'
        });
    }
    
}